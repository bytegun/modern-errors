extends: '@ehmicky/eslint-config/.eslintrc.yml'
rules:
  fp/no-class: 0
overrides:
  - files: ['examples/plugin/*.ts']
    parserOptions:
      project: examples/plugin/tsconfig.json
    rules:
      # Plugin examples comment most of the code
      '@typescript-eslint/no-unused-vars': 0

  - files: ['**/*.{ts,cts,mts}']
    rules:
      ## Comments
      '@typescript-eslint/ban-ts-comment': 2
      '@typescript-eslint/prefer-ts-expect-error': 2
      '@typescript-eslint/ban-tslint-comment': 2

      ## Declarations
      # Enforce declaring types of parameters.
      # Use type inference otherwise, including for callbacks (arrow functions).
      '@typescript-eslint/typedef':
        - 2
        - parameter: true
          propertyDeclaration: true
      '@typescript-eslint/no-inferrable-types': 2

      ## Assignments
      '@typescript-eslint/no-dynamic-delete': 2

      ## Naming
      '@typescript-eslint/naming-convention':
        - 2
        - selector: default
          # Variables of classes are titleized
          format: [camelCase, PascalCase]
          leadingUnderscore: forbid
          trailingUnderscore: forbid
        - selector: variable
          format: [camelCase, PascalCase, UPPER_CASE]
          leadingUnderscore: forbid
          trailingUnderscore: forbid
        - selector: typeLike
          format: [PascalCase]
          leadingUnderscore: forbid
          trailingUnderscore: forbid

      # ## Typecasting
      # '@typescript-eslint/no-base-to-string': 2
      # '@typescript-eslint/restrict-template-expressions': 2

      # ## Tests
      # '@typescript-eslint/no-unnecessary-boolean-literal-compare': 2
      # '@typescript-eslint/no-unnecessary-condition': 2
      # '@typescript-eslint/strict-boolean-expressions': 2
      # '@typescript-eslint/sort-type-constituents': 2
      # '@typescript-eslint/prefer-nullish-coalescing': 2

      # ## Structures
      # '@typescript-eslint/prefer-for-of': 2
      # '@typescript-eslint/no-for-in-array': 2

      # ## Switch
      # '@typescript-eslint/switch-exhaustiveness-check': 2

      # ## Functions
      # '@typescript-eslint/method-signature-style': 2
      # '@typescript-eslint/prefer-function-type': 2
      # '@typescript-eslint/explicit-function-return-type': 2
      # '@typescript-eslint/explicit-module-boundary-types': 2
      # '@typescript-eslint/adjacent-overload-signatures': 2
      # '@typescript-eslint/unified-signatures': 2

      # ## Objects
      # '@typescript-eslint/consistent-type-definitions': 2
      # '@typescript-eslint/consistent-indexed-object-style': 2
      # '@typescript-eslint/no-empty-interface': 2
      # '@typescript-eslint/member-ordering': 2
      # '@typescript-eslint/prefer-optional-chain': 2

      # ## Classes
      # '@typescript-eslint/unbound-method': 2
      # '@typescript-eslint/no-this-alias': 2
      # '@typescript-eslint/prefer-return-this-type': 2
      # '@typescript-eslint/explicit-member-accessibility': 2
      # '@typescript-eslint/prefer-readonly': 2
      # '@typescript-eslint/class-literal-property-style': 2
      # '@typescript-eslint/parameter-properties': 2
      # '@typescript-eslint/no-unsafe-declaration-merging': 2
      # '@typescript-eslint/no-extraneous-class': 2
      # '@typescript-eslint/no-misused-new': 2

      # ## Arrays
      # '@typescript-eslint/array-type': 2
      # '@typescript-eslint/prefer-includes': 2
      # '@typescript-eslint/prefer-reduce-type-parameter': 2
      # '@typescript-eslint/require-array-sort-compare': 2

      # ## Strings
      # '@typescript-eslint/restrict-plus-operands': 2
      # '@typescript-eslint/prefer-string-starts-ends-with': 2

      # ## RegExps
      # '@typescript-eslint/prefer-regexp-exec': 2

      # ## Async
      # '@typescript-eslint/await-thenable': 2
      # '@typescript-eslint/no-misused-promises': 2
      # '@typescript-eslint/promise-function-async': 2
      # '@typescript-eslint/no-floating-promises': 2

      # ## Modules
      # '@typescript-eslint/consistent-type-exports': 2
      # '@typescript-eslint/consistent-type-imports': 2
      # '@typescript-eslint/no-require-imports': 2
      # '@typescript-eslint/no-var-requires': 2
      # '@typescript-eslint/no-useless-empty-export': 2
      # '@typescript-eslint/triple-slash-reference': 2

      # ## Forbid
      # '@typescript-eslint/ban-types': 2

      # ## Type declaration
      # '@typescript-eslint/no-type-alias': 2
      # '@typescript-eslint/no-redundant-type-constituents': 2

      # ## Base types
      # '@typescript-eslint/no-explicit-any': 2
      # '@typescript-eslint/no-unsafe-assignment': 2
      # '@typescript-eslint/no-unsafe-member-access': 2
      # '@typescript-eslint/no-unsafe-argument': 2
      # '@typescript-eslint/no-unsafe-call': 2
      # '@typescript-eslint/no-unsafe-return': 2

      # ## Undefined/null/void
      # '@typescript-eslint/no-non-null-assertion': 2
      # '@typescript-eslint/non-nullable-type-assertion-style': 2
      # '@typescript-eslint/no-confusing-non-null-assertion': 2
      # '@typescript-eslint/no-extra-non-null-assertion': 2
      # '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 2
      # '@typescript-eslint/no-non-null-asserted-optional-chain': 2
      # '@typescript-eslint/no-invalid-void-type': 2
      # '@typescript-eslint/no-confusing-void-expression': 2
      # '@typescript-eslint/no-meaningless-void-operator': 2

      # ## Enums
      # '@typescript-eslint/prefer-enum-initializers': 2
      # '@typescript-eslint/prefer-literal-enum-member': 2
      # '@typescript-eslint/no-duplicate-enum-values': 2
      # '@typescript-eslint/no-unnecessary-qualifier': 2

      # ## Readonly
      # '@typescript-eslint/prefer-as-const': 2
      # '@typescript-eslint/prefer-readonly-parameter-types': 2

      # ## Generic
      # '@typescript-eslint/consistent-generic-constructors': 2
      # '@typescript-eslint/no-unnecessary-type-arguments': 2
      # '@typescript-eslint/no-unnecessary-type-constraint': 2

      # ## Type assertions
      # '@typescript-eslint/consistent-type-assertions': 2
      # '@typescript-eslint/no-unnecessary-type-assertion': 2

      # ## Namespaces
      # '@typescript-eslint/no-namespace': 2
      # '@typescript-eslint/prefer-namespace-keyword': 2

  - files: ['**/*.test-d.ts']
    rules:
      '@typescript-eslint/ban-ts-comment':
        - 2
        - ts-expect-error: 0
